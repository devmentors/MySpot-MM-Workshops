// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MySpot.Modules.Reservations.Infrastructure.DAL;

#nullable disable

namespace MySpot.Modules.Reservations.Infrastructure.DAL.Migrations
{
    [DbContext(typeof(ReservationsDbContext))]
    partial class ReservationsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("reservations")
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MySpot.Modules.Reservations.Core.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParkingSpotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WeeklyReservationsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WeeklyReservationsId");

                    b.ToTable("Reservations", "reservations");
                });

            modelBuilder.Entity("MySpot.Modules.Reservations.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "reservations");
                });

            modelBuilder.Entity("MySpot.Modules.Reservations.Core.Entities.WeeklyReservations", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("Week")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("_jobTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("JobTitle");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Week")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL AND [Week] IS NOT NULL");

                    b.ToTable("WeeklyReservations", "reservations");
                });

            modelBuilder.Entity("MySpot.Modules.Reservations.Core.Entities.Reservation", b =>
                {
                    b.HasOne("MySpot.Modules.Reservations.Core.Entities.WeeklyReservations", null)
                        .WithMany("Reservations")
                        .HasForeignKey("WeeklyReservationsId");
                });

            modelBuilder.Entity("MySpot.Modules.Reservations.Core.Entities.WeeklyReservations", b =>
                {
                    b.HasOne("MySpot.Modules.Reservations.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MySpot.Modules.Reservations.Core.Entities.WeeklyReservations", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
